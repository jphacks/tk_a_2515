name: Deploy to VPS

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@main

      - name: Setup mise
        run: |
          curl https://mise.run | sh
          echo "$HOME/.local/share/mise/bin" >> $GITHUB_PATH
          echo "$HOME/.local/share/mise/shims" >> $GITHUB_PATH
          mise install
          
      - name: Install frontend dependencies
        run: |
          cd frontend
          pnpm install --frozen-lockfile

      - name: Build frontend
        run: |
          cd frontend
          pnpm build

      - name: Verify backend
        run: |
          mise backend-uv
          mise start-backend
          mise prepare-db

      - name: Create deployment package
        run: |
          mkdir -p deploy_package/frontend
          
          # Frontend build artifacts
          cp -r frontend/.next/standalone deploy_package/frontend/
          cp frontend/package.json deploy_package/frontend/
          cp frontend/pnpm-lock.yaml deploy_package/frontend/
          cp frontend/pnpm-workspace.yaml deploy_package/frontend/
          cp frontend/pm2.config.cjs deploy_package/frontend/

          # Backend files
          mkdir -p deploy_package/backend
          cp -r backend/collectmap deploy_package/backend/
          cp -r backend/commons deploy_package/backend/
          cp -r backend/mountains deploy_package/backend/
          cp -r backend/paths deploy_package/backend/
          cp backend/docker-compose.yml deploy_package/backend/
          cp backend/Dockerfile deploy_package/backend/
          cp backend/manage.py deploy_package/backend/
          cp backend/pyproject.toml deploy_package/backend/
          cp backend/uv.lock deploy_package/backend/
          
          # Create tarball
          cp mise.toml deploy_package/
          tar -czf deploy.tar.gz -C deploy_package .

      - name: Deploy to VPS via SCP
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          port: ${{ secrets.DEPLOY_PORT }}
          source: "deploy.tar.gz"
          target: ${{ secrets.DEPLOY_TARGET }}

      - name: Extract and restart services on VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          port: ${{ secrets.DEPLOY_PORT }}
          script: |
            set -e
            
            # Extract deployment package
            cd ${{ secrets.DEPLOY_TARGET }}
            tar -xzf deploy.tar.gz
            rm deploy.tar.gz
            ~/.local/bin/mise install
            
            # Restart backend (Docker)
            mise backend-uv || true
            mise start-backend
            mise prepare-db
            
            # Restart frontend (PM2)
            cd ./frontend
            ~/.volta/bin/pm2 restart pm2.config.cjs --update-env || ~/.volta/bin/pm2 start pm2.config.cjs
            
            # Cleanup
            echo "Deployment completed successfully"
