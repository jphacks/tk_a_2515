/**
 * Generated by orval v7.13.2 🍺
 * Do not edit manually.
 * Collect Map API
 * Django backend for Collect Map API - Mountain and Path data management
 * OpenAPI spec version: 1.0.0
 */

import { customFetch } from ".././custom-fetch";
import type {
  Mountain,
  MountainCreate,
  MountainsListParams,
  MountainUpdate,
  PaginatedMountainList,
  PatchedMountainUpdate,
} from ".././models";

/**
 * Mountain一覧を取得（フィルタリング・ページネーション対応）
 */
export type mountainsListResponse200 = {
  data: PaginatedMountainList;
  status: 200;
};

export type mountainsListResponseSuccess = mountainsListResponse200 & {
  headers: Headers;
};

export type mountainsListResponse = mountainsListResponseSuccess;

export const getMountainsListUrl = (params?: MountainsListParams) => {
  const normalizedParams = new URLSearchParams();

  Object.entries(params || {}).forEach(([key, value]) => {
    if (value !== undefined) {
      normalizedParams.append(key, value === null ? "null" : value.toString());
    }
  });

  const stringifiedParams = normalizedParams.toString();

  return stringifiedParams.length > 0
    ? `/mountains/?${stringifiedParams}`
    : `/mountains/`;
};

export const mountainsList = async (
  params?: MountainsListParams,
  options?: RequestInit,
): Promise<mountainsListResponse> => {
  return customFetch<mountainsListResponse>(getMountainsListUrl(params), {
    ...options,
    method: "GET",
  });
};

/**
 * 新規Mountainを作成
 */
export type mountainsCreateResponse201 = {
  data: MountainCreate;
  status: 201;
};

export type mountainsCreateResponseSuccess = mountainsCreateResponse201 & {
  headers: Headers;
};

export type mountainsCreateResponse = mountainsCreateResponseSuccess;

export const getMountainsCreateUrl = () => {
  return `/mountains/`;
};

export const mountainsCreate = async (
  mountainCreate: MountainCreate,
  options?: RequestInit,
): Promise<mountainsCreateResponse> => {
  return customFetch<mountainsCreateResponse>(getMountainsCreateUrl(), {
    ...options,
    method: "POST",
    headers: { "Content-Type": "application/json", ...options?.headers },
    body: JSON.stringify(mountainCreate),
  });
};

/**
 * Mountain API ViewSet
 */
export type mountainsRetrieveResponse200 = {
  data: Mountain;
  status: 200;
};

export type mountainsRetrieveResponseSuccess = mountainsRetrieveResponse200 & {
  headers: Headers;
};

export type mountainsRetrieveResponse = mountainsRetrieveResponseSuccess;

export const getMountainsRetrieveUrl = (id: number) => {
  return `/mountains/${id}/`;
};

export const mountainsRetrieve = async (
  id: number,
  options?: RequestInit,
): Promise<mountainsRetrieveResponse> => {
  return customFetch<mountainsRetrieveResponse>(getMountainsRetrieveUrl(id), {
    ...options,
    method: "GET",
  });
};

/**
 * Mountain情報を更新
 */
export type mountainsUpdateResponse200 = {
  data: MountainUpdate;
  status: 200;
};

export type mountainsUpdateResponseSuccess = mountainsUpdateResponse200 & {
  headers: Headers;
};

export type mountainsUpdateResponse = mountainsUpdateResponseSuccess;

export const getMountainsUpdateUrl = (id: number) => {
  return `/mountains/${id}/`;
};

export const mountainsUpdate = async (
  id: number,
  mountainUpdate: MountainUpdate,
  options?: RequestInit,
): Promise<mountainsUpdateResponse> => {
  return customFetch<mountainsUpdateResponse>(getMountainsUpdateUrl(id), {
    ...options,
    method: "PUT",
    headers: { "Content-Type": "application/json", ...options?.headers },
    body: JSON.stringify(mountainUpdate),
  });
};

/**
 * Mountain API ViewSet
 */
export type mountainsPartialUpdateResponse200 = {
  data: MountainUpdate;
  status: 200;
};

export type mountainsPartialUpdateResponseSuccess =
  mountainsPartialUpdateResponse200 & {
    headers: Headers;
  };

export type mountainsPartialUpdateResponse =
  mountainsPartialUpdateResponseSuccess;

export const getMountainsPartialUpdateUrl = (id: number) => {
  return `/mountains/${id}/`;
};

export const mountainsPartialUpdate = async (
  id: number,
  patchedMountainUpdate: PatchedMountainUpdate,
  options?: RequestInit,
): Promise<mountainsPartialUpdateResponse> => {
  return customFetch<mountainsPartialUpdateResponse>(
    getMountainsPartialUpdateUrl(id),
    {
      ...options,
      method: "PATCH",
      headers: { "Content-Type": "application/json", ...options?.headers },
      body: JSON.stringify(patchedMountainUpdate),
    },
  );
};

/**
 * Mountainを削除
 */
export type mountainsDestroyResponse204 = {
  data: void;
  status: 204;
};

export type mountainsDestroyResponseSuccess = mountainsDestroyResponse204 & {
  headers: Headers;
};

export type mountainsDestroyResponse = mountainsDestroyResponseSuccess;

export const getMountainsDestroyUrl = (id: number) => {
  return `/mountains/${id}/`;
};

export const mountainsDestroy = async (
  id: number,
  options?: RequestInit,
): Promise<mountainsDestroyResponse> => {
  return customFetch<mountainsDestroyResponse>(getMountainsDestroyUrl(id), {
    ...options,
    method: "DELETE",
  });
};

/**
 * Prefecture一覧を取得
 */
export type mountainsPrefecturesRetrieveResponse200 = {
  data: void;
  status: 200;
};

export type mountainsPrefecturesRetrieveResponseSuccess =
  mountainsPrefecturesRetrieveResponse200 & {
    headers: Headers;
  };

export type mountainsPrefecturesRetrieveResponse =
  mountainsPrefecturesRetrieveResponseSuccess;

export const getMountainsPrefecturesRetrieveUrl = () => {
  return `/mountains/prefectures/`;
};

export const mountainsPrefecturesRetrieve = async (
  options?: RequestInit,
): Promise<mountainsPrefecturesRetrieveResponse> => {
  return customFetch<mountainsPrefecturesRetrieveResponse>(
    getMountainsPrefecturesRetrieveUrl(),
    {
      ...options,
      method: "GET",
    },
  );
};

/**
 * Type一覧を取得
 */
export type mountainsTypesRetrieveResponse200 = {
  data: void;
  status: 200;
};

export type mountainsTypesRetrieveResponseSuccess =
  mountainsTypesRetrieveResponse200 & {
    headers: Headers;
  };

export type mountainsTypesRetrieveResponse =
  mountainsTypesRetrieveResponseSuccess;

export const getMountainsTypesRetrieveUrl = () => {
  return `/mountains/types/`;
};

export const mountainsTypesRetrieve = async (
  options?: RequestInit,
): Promise<mountainsTypesRetrieveResponse> => {
  return customFetch<mountainsTypesRetrieveResponse>(
    getMountainsTypesRetrieveUrl(),
    {
      ...options,
      method: "GET",
    },
  );
};
